version: '3.8'

services:
  # Backend Service with Secrets
  backend-service:
    build:
      context: ./services/backend-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - cloud-net
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: zerotrust
    secrets:
      - db_user
      - db_password
    volumes:
      - ./services/backend-service/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres

  # PostgreSQL with Secrets
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: zerotrust
    secrets:
      - postgres_user
      - postgres_password
    networks:
      - cloud-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Keycloak with Secrets
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    ports:
      - "8080:8080"
    networks:
      - on-prem-net
    environment:
      KEYCLOAK_ADMIN: admin
    secrets:
      - keycloak_admin_password
    command: start-dev
    volumes:
      - ./certs:/etc/ssl/certs:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  on-prem-net:
    external: true
  cloud-net:
    external: true

volumes:
  postgres_data:

secrets:
  db_user:
    file: ./secrets/db_user.txt
  db_password:
    file: ./secrets/db_password.txt
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
  keycloak_admin_password:
    file: ./secrets/keycloak_admin_password.txt 